// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionArchAPI.Persistence.Context;

#nullable disable

namespace OnionArchAPI.Persistence.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240625125521_mig2")]
    partial class mig2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 107, DateTimeKind.Utc).AddTicks(4541),
                            IsDelete = false,
                            Name = "Defakto"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 107, DateTimeKind.Utc).AddTicks(4552),
                            IsDelete = false,
                            Name = "Kigili"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 107, DateTimeKind.Utc).AddTicks(4555),
                            IsDelete = false,
                            Name = "Rodrigos"
                        });
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(164),
                            IsDelete = false,
                            Name = "Electronika",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(177),
                            IsDelete = false,
                            Name = "Notebook",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(180),
                            IsDelete = false,
                            Name = "Phone",
                            ParentId = 1,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(182),
                            IsDelete = false,
                            Name = "Geyim",
                            ParentId = 0,
                            Priorty = 3
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(185),
                            IsDelete = false,
                            Name = "Tshort",
                            ParentId = 4,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(188),
                            IsDelete = false,
                            Name = "Cins",
                            ParentId = 4,
                            Priorty = 2
                        });
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(4808),
                            Description = "Cotton",
                            IsDelete = false,
                            Title = "Material"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(4815),
                            Description = "8gb",
                            IsDelete = false,
                            Title = "Ram"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 6,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(4819),
                            Description = "125sm",
                            IsDelete = false,
                            Title = "Uzunluq"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 108, DateTimeKind.Utc).AddTicks(4822),
                            Description = "50px",
                            IsDelete = false,
                            Title = "Cekilis"
                        });
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 111, DateTimeKind.Utc).AddTicks(7384),
                            Description = "test",
                            IsDelete = false,
                            Price = 34m,
                            Title = "Kofta"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 111, DateTimeKind.Utc).AddTicks(7396),
                            Description = "test",
                            IsDelete = false,
                            Price = 158m,
                            Title = "Iphone"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 111, DateTimeKind.Utc).AddTicks(7400),
                            Description = "test",
                            IsDelete = false,
                            Price = 346m,
                            Title = "Notebook"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CreateDate = new DateTime(2024, 6, 25, 12, 55, 20, 111, DateTimeKind.Utc).AddTicks(7403),
                            Description = "test",
                            IsDelete = false,
                            Price = 12m,
                            Title = "salvar"
                        });
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Detail", b =>
                {
                    b.HasOne("OnionArchAPI.Domen.Entitys.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Product", b =>
                {
                    b.HasOne("OnionArchAPI.Domen.Entitys.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.ProductCategory", b =>
                {
                    b.HasOne("OnionArchAPI.Domen.Entitys.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnionArchAPI.Domen.Entitys.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("OnionArchAPI.Domen.Entitys.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
